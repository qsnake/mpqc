% Emacs should use -*- KeyVal -*- mode
% this file was automatically generated
% label: ne dimer mp2-r12 test series
% molecule specification
molecule<Molecule>: (
  symmetry = D2H
  unit = angstrom
  { atoms geometry } = {
   C [-0.000000000000    -0.000000000000     1.391500000000 ]
   H [-0.000000000000    -0.000000000000     2.471500000000 ]
   C [ 1.205074349366    -0.000000000000     0.695750000000 ]
   H [ 2.140381785453    -0.000000000000     1.235750000000 ]
   C [ 1.205074349366    -0.000000000000    -0.695750000000 ]
   H [ 2.140381785453     0.000000000000    -1.235750000000 ]
   C [-0.000000000000     0.000000000000    -1.391500000000 ]
   H [-0.000000000000     0.000000000000    -2.471500000000 ]
   C [-1.205074349366     0.000000000000    -0.695750000000 ]
   H [-2.140381785453     0.000000000000    -1.235750000000 ]
   C [-1.205074349366    -0.000000000000     0.695750000000 ]
   H [-2.140381785453     0.000000000000     1.235750000000 ]
  }
)
% basis set specification
basis<GaussianBasisSet>: (
  name = "DZ (Dunning)"
  molecule = $:molecule
)
mpqc: (
  integrals<IntegralCints>: ()
  checkpoint = no
  savestate = no
  restart = no
  % molecular coordinates for optimization
  coor<SymmMolecularCoor>: (
    molecule = $:molecule
    generator<IntCoorGen>: (
      molecule = $:molecule
    )
  )
  do_energy = yes
  do_gradient = no
  % method for computing the molecule's energy
  mole<MBPT2_R12>: (
    molecule = $:molecule
    basis = $:basis
    coor = $..:coor
    memory = 36000000
    stdapprox = "A"
    nfzc = 0
    r12ints = posix 
    r12ints_file = "./mbpt_mp2r12_c6h6_multipass.r12ints.dat"
    aux_basis<GaussianBasisSet>: (
      name = "cc-pVDZ"
      molecule = $:molecule
    )

    reference<CLHF>: (
      molecule = $:molecule
      basis = $:basis
      total_charge = 0
      multiplicity = 1
      memory = 20000000
      guess_wavefunction<CLHF>: (
        molecule = $:molecule
        total_charge = 0
        multiplicity = 1
        basis<GaussianBasisSet>: (
          molecule = $:molecule
          name = "DZ (Dunning)"
        )
        memory = 20000000
      )
    )
  )
  optimize = no
  % optimizer object for the molecular geometry
  opt<QNewtonOpt>: (
    max_iterations = 20
    function = $..:mole
    update<BFGSUpdate>: ()
    convergence<MolEnergyConvergence>: (
      cartesian = yes
      energy = $..:..:mole
    )
  )
)
