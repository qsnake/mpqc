% Emacs should use -*- KeyVal -*- mode
% this file was automatically generated
% label: symmetry test series 3
% molecule specification
molecule<Molecule>: (
  symmetry = auto
  unit = angstrom
  { atoms geometry } = {
     N     [     0.000000000000     0.000000000000    -0.781418210400 ]
     H     [     0.000000000000     0.000000000000    -1.782384397700 ]
     C     [    -0.130523941300    -1.025687712400     0.067764770500 ]
     C     [     0.130523941300     1.025687712400     0.067764770500 ]
     H     [     0.957395332100     1.713565421800    -0.006555228000 ]
     H     [    -0.957395332100    -1.713565421800    -0.006555228000 ]
     H     [     0.651924280300    -1.228575600600     0.765043854000 ]
     H     [    -0.651924280300     1.228575600600     0.765043854000 ]
  }
)
% basis set specification
basis<GaussianBasisSet>: (
  name = "STO-3G"
  molecule = $:molecule
)
mpqc: (
  checkpoint = no
  savestate = no
  restart = no
  % molecular coordinates for optimization
  coor<SymmMolecularCoor>: (
    molecule = $:molecule
    generator<IntCoorGen>: (
      molecule = $:molecule
    )
  )
  do_energy = yes
  do_gradient = yes
  % method for computing the molecule's energy
  mole<CLHF>: (
    molecule = $:molecule
    basis = $:basis
    coor = $..:coor
    memory = 32000000
    total_charge = 0
    multiplicity = 1
    print_npa = yes
    guess_wavefunction<CLHF>: (
      molecule = $:molecule
      total_charge = 0
      multiplicity = 1
      basis<GaussianBasisSet>: (
        molecule = $:molecule
        name = "STO-3G"
      )
      memory = 32000000
    )
  )
  optimize = no
  % optimizer object for the molecular geometry
  opt<QNewtonOpt>: (
    max_iterations = 20
    function = $..:mole
    update<BFGSUpdate>: ()
    convergence<MolEnergyConvergence>: (
      cartesian = yes
      energy = $..:..:mole
    )
  )
)
