% -*- KeyVal -*-

trap_fpes = 0

h<Molecule>: (
  symmetry = d2h
  unit = angstrom
  { atoms geometry } = {
    H     [  0.0  0.0   0.0 ]
  }
)

li<Molecule>: (
  symmetry = d2h
  unit = angstrom
  { atoms geometry } = {
    Li     [  0.0  0.0   0.0 ]
  }
)

heh<Molecule>: (
  symmetry = C1
  unit = angstrom
  { atoms geometry } = {
    He    [     0.00000000     0.00000000     1.00000000 ]
    H     [     0.00000000     0.00000000    -1.00000000 ]
  }
)

hehe<Molecule>: (
  symmetry = C1
  unit = angstrom
  { atoms geometry } = {
    He    [     0.00000000     0.00000000     1.00000000 ]
    He    [     0.00000000     0.00000000    -1.00000000 ]
  }
)

hehy<Molecule>: (
  symmetry = C1
  unit = angstrom
  { atoms geometry } = {
    He    [     0.00000000       1.00000000  0.00000000  ]
    H     [     0.00000000      -1.00000000  0.00000000  ]
  }
)

he<Molecule>: (
  symmetry = d2h
  unit = angstrom
  { atoms geometry } = {
    He     [  0.0  0.0   0.0 ]
  }
)

hf<Molecule>: (
  symmetry = c2v
  unit = angstrom
  { atoms geometry } = {
      H    [ 0.000000    0.000000   -0.832050 ]
      F    [ 0.000000    0.000000    0.092450 ]
  }
)

h2o<Molecule>: (
  symmetry = C1
  unit = angstrom
  { atoms geometry } = {
    O     [     0.00000000     0.00000000     0.36937294 ]
    H     [     0.78397590     0.00000000    -0.18468647 ]
    H     [    -0.78397590     0.00000000    -0.18468647 ]
  }
)

nel<NElFunctional>:()

slaterx<SlaterXFunctional>: ()

pw92lc<PW92LCFunctional>: ()

xalpha<XalphaFunctional>: ()

hfb<SumDenFunctional>: (
  coefs = [ 1.0 1.0 ]
  funcs: [
     <SlaterXFunctional>: ()
     <Becke88XFunctional>: ()
  ]
)

blyp<SumDenFunctional>: (
  coefs = [ 1.0 1.0 1.0 ]
  funcs: [
     <SlaterXFunctional>: ()
     <Becke88XFunctional>: ()
     <LYPCFunctional>: ()
    ]
)

b3lyp<SumDenFunctional>: (
  coefs = [ 0.8 0.72 0.19 0.81]
  a0 = 0.2
  funcs: [
     <SlaterXFunctional>: ()
     <Becke88XFunctional>: ()
     <VWN3LCFunctional>: ()
     <LYPCFunctional>: ()
    ]
)

pbex<PBEXFunctional>: ()
pbexo<PBEXFunctionalOld>: ()

pbec<PBECFunctional>: ()

pbeco<PBECFunctionalOld>: ()

pbe<SumDenFunctional>: (
  coefs = [ 1.0 1.0 ]
  funcs: [
     <PBEXFunctional>: ()
     <PBECFunctional>: ()
    ]
)

mpw91_pw91x<mPW91XFunctional>: ( constants = "PW91" )
mpw91_b88x<mPW91XFunctional>: ( constants = "B88" )
pw91x<PW91XFunctional>: ()
pw91c<PW91CFunctional>: ()
pw91co<PW91CFunctionalOld>: ()
b88x<SumDenFunctional>: (
  coefs = [ 1.0 1.0 ]
  funcs: [
     <SlaterXFunctional>: ()
     <Becke88XFunctional>: ()
    ]
)


pw92lc<PW92LCFunctional>: ()

pw91<SumDenFunctional>: (
  coefs = [ 1.0 1.0 ]
  funcs: [
     <PW91XFunctional>: ()
     <PW91CFunctional>: ()
    ]
)

pbecnl<SumDenFunctional>: (
  coefs = [ 1.0 -1.0 ]
  funcs: [
     <PBECFunctional>: ()
     <PW92LCFunctional>: ()
    ]
)

valtest = [ $:pbex  $:pbec ] %$:pw91c $:pw91co $:pw92lc $:pw91 $:b88x $:mpw91_b88x $:pbe $:pw91c]

basis<GaussianBasisSet>: (
  %name = test
  %name = test2
  %name = "STO-3G"
  name = "3-21G"
  %name = "6-31G"
  molecule = $..:molecule
)

clwfn<CLHF>:(
  molecule = $:molecule
  basis = $:basis
  memory = 16000000
)

oswfn<HSOSSCF>:(
  molecule = $:li
  basis = $:basis
  memory = 16000000
)

clks<CLKS>: (
  value_accuracy = 1.0e-8
  molecule = $:molecule
  basis = $:basis
  functional = $:functional
  guess_wavefunction<CLHF>: (
    molecule = $:molecule
    basis<GaussianBasisSet>: (
      name = "STO-3G"
      molecule = $:molecule
    )
  )
)

wfn = $:clwfn
%dft = $:clks
molecule = $:h2o
% HFB works for h2o/3-21G hehe/3-21G
% BLYP works dE/dx == DE/Dx for hehe/3-21G h2o/3-21G
% B3LYP fails dE/dx == DE/Dx for hehe/3-21G
functional = $:b3lyp

basis: (
 helium: test: [
  (type: [am = s]
   {exp coef:0} = {
            6.36242139       0.15432897
            1.15892300       0.53532814
            0.31364979       0.44463454
   })
  (type: [am = p]
   {exp coef:0} = {
            1.0       1.0
   })
 ]
 helium: test2: [
  (type: [am = s]
   {exp coef:0} = {
            6.36242139       0.15432897
            1.15892300       0.53532814
            0.31364979       0.44463454
   })
  (type: [am = s]
   {exp coef:0} = {
            0.01       1.0
   })
 ]
 helium: test3: [
  (type: [am = s]
   {exp coef:0} = {
            4.0       1.0
            2.0       1.0
   })
 ]
)
